<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="4" failed="0" total="4" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="1031" started-at="2019-01-19T05:47:14Z" finished-at="2019-01-19T05:47:15Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="1031" started-at="2019-01-19T05:47:14Z" finished-at="2019-01-19T05:47:15Z">
      <class name="com.automationpractice.test.NewTest">
        <test-method status="FAIL" signature="setUpReport()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="setUpReport" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:14Z" finished-at="2019-01-19T11:17:14Z">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[D:\Selenium_Workspace\TestAutomation\src\main\java\testdata\TestData.xlsx (The system cannot find the path specified)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: D:\Selenium_Workspace\TestAutomation\src\main\java\testdata\TestData.xlsx (The system cannot find the path specified)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at java.io.FileInputStream.<init>(Unknown Source)
	at utilities.ExcelUtils.setExcelFile(ExcelUtils.java:34)
	at utilities.TestUtil.getBrowserName(TestUtil.java:35)
	at base.TestBase.initialization(TestBase.java:32)
	at com.automationpractice.test.NewTest.setUpReport(NewTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:641)
	at org.testng.TestRunner.run(TestRunner.java:609)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpReport -->
        <test-method status="SKIP" signature="f()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="f" duration-ms="4" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="SKIP" signature="checkStatus(org.testng.ITestResult)[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="checkStatus" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method status="SKIP" signature="idDispalyed()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="idDispalyed" duration-ms="3" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- idDispalyed -->
        <test-method status="SKIP" signature="checkStatus(org.testng.ITestResult)[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="checkStatus" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method status="SKIP" signature="logOff1()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="logOff1" duration-ms="3" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOff1 -->
        <test-method status="SKIP" signature="checkStatus(org.testng.ITestResult)[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="checkStatus" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method status="SKIP" signature="logOff2()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="logOff2" duration-ms="3" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logOff2 -->
        <test-method status="SKIP" signature="checkStatus(org.testng.ITestResult)[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="checkStatus" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatus -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:com.automationpractice.test.NewTest@14ddd49]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-01-19T11:17:15Z" finished-at="2019-01-19T11:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automationpractice.test.NewTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
